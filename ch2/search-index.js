var searchIndex = JSON.parse('{\
"os":{"doc":"The main module and entrypoint","t":"AAFAAAOOFAAAARDRDHRDRHRDMMLLLLLLLLMMMLLLLLLLLFLLLLLLMFLLFLLLLLLLLLLLLRRRRIRDRMLLKLFKLKLLLLLLLDLLLLFLLLLFDLLLLLFLLLLLRFFFDMADLLLLMLLLLLRRAAFRFFDAFMMFMDLLLLLMLMLLLM","n":["batch","board","clear_bss","console","lang_items","logging","print","println","rust_main","sbi","sync","syscall","trap","APP_BASE_ADDRESS","APP_MANAGER","APP_SIZE_LIMIT","AppManager","KERNEL_STACK","KERNEL_STACK_SIZE","KernelStack","MAX_APP_NUM","USER_STACK","USER_STACK_SIZE","UserStack","__private_field","app_start","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current_app","data","data","deref","from","from","from","from","get_current_app","get_sp","get_sp","init","into","into","into","into","load_app","move_to_next_app","num_app","print_app_info","print_app_info","push_context","run_next_app","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","EXIT_FAILURE","EXIT_FAILURE_FLAG","EXIT_RESET","EXIT_SUCCESS","QEMUExit","QEMU_EXIT_HANDLE","RISCV64","VIRT_TEST","addr","borrow","borrow_mut","exit","exit","exit_code_encode","exit_failure","exit_failure","exit_success","exit_success","from","into","new","try_from","try_into","type_id","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","panic","SimpleLogger","borrow","borrow_mut","enabled","flush","from","init","into","log","try_from","try_into","type_id","SBI_CONSOLE_PUTCHAR","console_putchar","sbi_call","shutdown","UPSafeCell","inner","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_EXIT","SYSCALL_WRITE","fs","process","syscall","FD_STDOUT","sys_write","sys_exit","TrapContext","context","init","sepc","sstatus","trap_handler","x","TrapContext","app_init_context","borrow","borrow_mut","from","into","sepc","set_sp","sstatus","try_from","try_into","type_id","x"],"q":[[0,"os"],[13,"os::batch"],[69,"os::board"],[93,"os::console"],[103,"os::lang_items"],[104,"os::logging"],[116,"os::sbi"],[120,"os::sync"],[123,"os::sync::up"],[134,"os::syscall"],[139,"os::syscall::fs"],[141,"os::syscall::process"],[142,"os::trap"],[149,"os::trap::context"],[162,"core::result"],[163,"core::any"],[164,"core::fmt"],[165,"core::fmt"],[166,"log"],[167,"log"]],"d":["batch subsystem","","clear BSS segment","SBI console driver, for text output","The panic handler","Global logger","Print! to the host console using the format string and …","Println! to the host console using the format string and …","the rust entry-point of os","SBI call wrappers","Synchronization and interior mutability primitives","Implementation of syscalls","Trap handling functionality","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","init batch subsystem","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","print apps info","","","run next app","","","","","","","","","","","","","","","","","","","RISCV64 configuration","","Address of the sifive_test mapped device.","","","Exit with specified return code.","Exit qemu with specified exit code.","Encode the exit code using EXIT_FAILURE_FLAG.","Exit QEMU using <code>EXIT_FAILURE</code>, aka <code>1</code>.","","Exit QEMU using <code>EXIT_SUCCESS</code>, aka <code>0</code>, if possible.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create an instance.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","panic handler","a simple logger","","","","","Returns the argument unchanged.","initiate logger","Calls <code>U::from(self)</code>.","","","","","","use sbi call to putchar in console (qemu uart handler)","general sbi call","use sbi call to shutdown the kernel","Wrap a static data structure inside it so that we are able …","inner data","Uniprocessor interior mutability primitives","Wrap a static data structure inside it so that we are able …","","","Panic if the data has been borrowed.","Returns the argument unchanged.","inner data","Calls <code>U::from(self)</code>.","User is responsible to guarantee that inner struct is only …","","","","exit syscall","write syscall","File and filesystem-related syscalls","App management syscalls","handle syscall exception with <code>syscall_id</code> and other …","","write buf of length <code>len</code>  to a file with <code>fd</code>","task exits and submit an exit code","Trap Context","","initialize CSR <code>stvec</code> as the entry of <code>__alltraps</code>","CSR sepc","CSR sstatus      ","handle an interrupt, exception, or system call from user …","general regs[0..31]","Trap Context","init app context","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","CSR sepc","set stack pointer to x_2 reg (sp)","CSR sstatus      ","","","","general regs[0..31]"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,6,7,3,2,6,7,3,2,3,6,7,2,6,7,3,2,3,6,7,0,6,7,3,2,3,3,3,0,3,6,0,6,7,3,2,6,7,3,2,6,7,3,2,0,0,0,0,0,0,0,0,12,12,12,28,12,0,28,12,28,12,12,12,12,12,12,12,0,15,15,15,15,0,15,15,15,15,0,0,19,19,19,19,19,0,19,19,19,19,19,0,0,0,0,0,4,0,0,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,8,8,0,8,0,8,8,8,8,8,8,8,8,8,8,8,8],"f":[0,0,[[]],0,0,0,0,0,[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[2,[[4,[3]]]],[[]],[[]],[[]],[[]],[3,5],[6,5],[7,5],[[]],[[]],[[]],[[]],[[]],[[3,5]],[3],0,[[]],[3],[[6,8],8],[[],1],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,0,[[]],[[]],[11,1],[[12,11],1],[11,11],[[],1],[12,1],[[],1],[12,1],[[]],[[]],[13,12],[[],9],[[],9],[[],10],0,[[]],[[]],[[]],[[]],[14],[[],9],[[],9],[[],10],[[15,16],17],[18,1],0,[[]],[[]],[[19,20],21],[19],[[]],[[]],[[]],[[19,22]],[[],9],[[],9],[[],10],0,[5],[[5,5,5,5],5],[[],1],0,0,0,0,[[]],[[]],[4,23],[[]],0,[[]],[[],4],[[],9],[[],9],[[],10],0,0,0,0,[[5,[24,[5]]],25],0,[[5,26,5],25],[27,1],0,0,[[]],0,0,[8,8],0,0,[[5,5],8],[[]],[[]],[[]],[[]],0,[[8,5]],0,[[],9],[[],9],[[],10],0],"c":[],"p":[[15,"never"],[3,"APP_MANAGER",13],[3,"AppManager",13],[3,"UPSafeCell",123],[15,"usize"],[3,"KernelStack",13],[3,"UserStack",13],[3,"TrapContext",149],[4,"Result",162],[3,"TypeId",163],[15,"u32"],[3,"RISCV64",69],[15,"u64"],[3,"Arguments",164],[3,"Stdout",93],[15,"str"],[6,"Result",164],[3,"PanicInfo",165],[3,"SimpleLogger",104],[3,"Metadata",166],[15,"bool"],[3,"Record",166],[3,"RefMut",167],[15,"array"],[15,"isize"],[15,"u8"],[15,"i32"],[8,"QEMUExit",69]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
