var searchIndex = JSON.parse('{\
"os":{"doc":"The main module and entrypoint","t":"AFAAAOOFARRRRIRDRMLLKLFKLKLLLLLLLDLLLLFLLLLFDLLLLLFLLLLLRFFF","n":["board","clear_bss","console","lang_items","logging","print","println","rust_main","sbi","EXIT_FAILURE","EXIT_FAILURE_FLAG","EXIT_RESET","EXIT_SUCCESS","QEMUExit","QEMU_EXIT_HANDLE","RISCV64","VIRT_TEST","addr","borrow","borrow_mut","exit","exit","exit_code_encode","exit_failure","exit_failure","exit_success","exit_success","from","into","new","try_from","try_into","type_id","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","panic","SimpleLogger","borrow","borrow_mut","enabled","flush","from","init","into","log","try_from","try_into","type_id","SBI_CONSOLE_PUTCHAR","console_putchar","sbi_call","shutdown"],"q":[[0,"os"],[9,"os::board"],[33,"os::console"],[43,"os::lang_items"],[44,"os::logging"],[56,"os::sbi"],[60,"core::result"],[61,"core::any"],[62,"core::fmt"],[63,"core::fmt"],[64,"log"],[65,"log"]],"d":["","clear BSS segment","SBI console driver, for text output","The panic handler","Global logger","Print! to the host console using the format string and …","Println! to the host console using the format string and …","the rust entry-point of os","SBI call wrappers","","","","","","","RISCV64 configuration","","Address of the sifive_test mapped device.","","","Exit with specified return code.","Exit qemu with specified exit code.","Encode the exit code using EXIT_FAILURE_FLAG.","Exit QEMU using <code>EXIT_FAILURE</code>, aka <code>1</code>.","","Exit QEMU using <code>EXIT_SUCCESS</code>, aka <code>0</code>, if possible.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create an instance.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","panic handler","a simple logger","","","","","Returns the argument unchanged.","initiate logger","Calls <code>U::from(self)</code>.","","","","","","use sbi call to putchar in console (qemu uart handler)","general sbi call","use sbi call to shutdown the kernel"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,17,3,0,17,3,17,3,3,3,3,3,3,3,0,8,8,8,8,0,8,8,8,8,0,0,12,12,12,12,12,0,12,12,12,12,12,0,0,0,0],"f":[0,[[]],0,0,0,0,0,[[],1],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[2,1],[[3,2],1],[2,2],[[],1],[3,1],[[],1],[3,1],[[]],[[]],[4,3],[[],5],[[],5],[[],6],0,[[]],[[]],[[]],[[]],[7],[[],5],[[],5],[[],6],[[8,9],10],[11,1],0,[[]],[[]],[[12,13],14],[12],[[]],[[]],[[]],[[12,15]],[[],5],[[],5],[[],6],0,[16],[[16,16,16,16],16],[[],1]],"c":[],"p":[[15,"never"],[15,"u32"],[3,"RISCV64",9],[15,"u64"],[4,"Result",60],[3,"TypeId",61],[3,"Arguments",62],[3,"Stdout",33],[15,"str"],[6,"Result",62],[3,"PanicInfo",63],[3,"SimpleLogger",44],[3,"Metadata",64],[15,"bool"],[3,"Record",64],[15,"usize"],[8,"QEMUExit",9]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
